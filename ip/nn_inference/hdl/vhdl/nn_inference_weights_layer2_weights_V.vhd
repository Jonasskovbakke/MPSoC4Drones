-- ==============================================================
-- Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity nn_inference_weights_layer2_weights_V_rom is 
    generic(
             DWIDTH     : integer := 27; 
             AWIDTH     : integer := 9; 
             MEM_SIZE    : integer := 512
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          addr1      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of nn_inference_weights_layer2_weights_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr1_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "000010011011001101111111010", 1 => "111111001001000110101111010", 
    2 => "000111010010000111001010000", 3 => "110111111101111010001000100", 
    4 => "110101011111110101010011011", 5 => "111010000100111001100110111", 
    6 => "000100000100001000001110010", 7 => "110001110010111111001001101", 
    8 => "001000111010011111100100010", 9 => "010010100010001011110111000", 
    10 => "111110101011011011100101100", 11 => "111101101110001100011000111", 
    12 => "000010000110101001010001111", 13 => "111101010011011001101011110", 
    14 => "001000000010110010000110101", 15 => "111101100001100010111000011", 
    16 => "111110110010101110110001100", 17 => "000001101001011101000110101", 
    18 => "000110001011000100101010010", 19 => "111011101110010011100101010", 
    20 => "111110001110010011001001000", 21 => "000101010100001111110000111", 
    22 => "111111100000011111110100110", 23 => "111111000100100010011001110", 
    24 => "111010000101000110101001101", 25 => "000010110000110110100111100", 
    26 => "000001001010011110101001111", 27 => "000010010010110110010010110", 
    28 => "111110011100101110100001111", 29 => "000001011000010011000110101", 
    30 => "000111001011100010101001011", 31 => "000001101110101011011011110", 
    32 => "000000101110000101001110010", 33 => "000010000101000001100010011", 
    34 => "111111101100101010110000011", 35 => "111110100110110111010011011", 
    36 => "000010100110010111010010011", 37 => "111110001010101011101100111", 
    38 => "111111101011100111101100000", 39 => "111101010110001111100010011", 
    40 => "111101010000110011100000111", 41 => "111101100110100110111001110", 
    42 => "111110101110101101011010111", 43 => "111111010100010101110011001", 
    44 => "000010110000111111011101110", 45 => "111111110011110000110010010", 
    46 => "000000111111101010110000101", 47 => "111111000001101100001010001", 
    48 => "000000011000011010000011011", 49 => "000001110001011101001100111", 
    50 => "111111011001001000001011100", 51 => "000001101101011110110101110", 
    52 => "000010110100100000110101111", 53 => "000010101101011111110101010", 
    54 => "000001011011001110100110100", 55 => "000010011110111111010100010", 
    56 => "000001111110100011101100011", 57 => "111101001010011110110000001", 
    58 => "111101010000011011111100111", 59 => "000000110010010100111000100", 
    60 => "111110001110110110011110010", 61 => "000000011110000000111110111", 
    62 => "111101100111010110010010011", 63 => "000000101101101110100001100", 
    64 => "111101001000100011111100011", 65 => "000001100111100101100100000", 
    66 => "111101011011000111110100011", 67 => "111111100010011001000110111", 
    68 => "111101100011101110000010001", 69 => "000000001100011011011110001", 
    70 => "111101100110100001100001101", 71 => "000001000101111100101011100", 
    72 => "000010001100100111101011110", 73 => "000010000110101010101011000", 
    74 => "111101010010001111111100000", 75 => "111110001101011101010100110", 
    76 => "000010101000110000000100000", 77 => "000010001000110010100101110", 
    78 => "111111011000101101101001011", 79 => "000000100010100110011111011", 
    80 => "000000101000101011100100000", 81 => "000001010101101001101000001", 
    82 => "000000111111110110001000110", 83 => "000000000010011101000001010", 
    84 => "111101101101101001110011010", 85 => "111111001001110000001000010", 
    86 => "000000100000010010010100001", 87 => "000000100000110000011010100", 
    88 => "000001010011100011100010100", 89 => "000001101100100110011000000", 
    90 => "000010011011000101010111010", 91 => "000010010000011100001101110", 
    92 => "111110111000101101010100000", 93 => "000010100010001101001000001", 
    94 => "000010000000110111100110101", 95 => "000010000001110110111000110", 
    96 => "111111011111100000101111001", 97 => "111111111110101011011001001", 
    98 => "111111011000000010011000011", 99 => "000010001110011110000110111", 
    100 => "111101111010011010111010011", 101 => "111111001001011001110011010", 
    102 => "111110000111000111010111000", 103 => "111111010011100100111001111", 
    104 => "111111010100011111111111010", 105 => "000001110110110001001011010", 
    106 => "000000010011110111111000001", 107 => "000000111000101111000100001", 
    108 => "111111010100110001100001010", 109 => "111110011011111100111000101", 
    110 => "000001000110101110110010000", 111 => "000010011000111110011101101", 
    112 => "000001000111101000011111001", 113 => "111101001101001100000110111", 
    114 => "000011000111110001111001001", 115 => "111111100000101101001111011", 
    116 => "111010100010100011100001100", 117 => "111111010011110010111001000", 
    118 => "000001001101111110101001100", 119 => "111100010000110101111001000", 
    120 => "000101101110100011111101101", 121 => "000011000011111011011010011", 
    122 => "111110111000111110000000001", 123 => "111110111110000000001100001", 
    124 => "000000100011010110111010001", 125 => "111101100011100110110111001", 
    126 => "000001001100010001001001110", 127 => "000010011100111101010100000", 
    128 => "111101001100101010001110000", 129 => "000010011010100010110000110", 
    130 => "000001001111000100111011011", 131 => "111110100111000010000111011", 
    132 => "111101101101110000110011001", 133 => "111111110110011101110001000", 
    134 => "111110100001111101010001110", 135 => "111110100101110011110011001", 
    136 => "111110110101110110011111111", 137 => "111111110111010100011011110", 
    138 => "000000110100111111101100100", 139 => "000001111111001000100011001", 
    140 => "111101110001010111111100101", 141 => "111111110101001110101101001", 
    142 => "000000110001111010010000001", 143 => "000000100010100011100011010", 
    144 => "000000011001001001001110110", 145 => "000000110110000010110010000", 
    146 => "110111100110110101000111110", 147 => "000101001001110100111010101", 
    148 => "000101101001001001000101011", 149 => "111000111011000011111011000", 
    150 => "000101100001011001101000101", 151 => "111100101110000110010110100", 
    152 => "000001111011000010010010001", 153 => "000010111011001101001110111", 
    154 => "111110101000100011111101111", 155 => "111110001010000001010110001", 
    156 => "111111111110110000010111001", 157 => "111110000110000101000011100", 
    158 => "111100010110111011100001101", 159 => "111110000100111010110110101", 
    160 => "111110101011101001000011011", 161 => "000010001000001010010001001", 
    162 => "000010100001010110000110111", 163 => "000000011001001100000110101", 
    164 => "111101010010011000000011101", 165 => "111111000110101000000010111", 
    166 => "000010100101101100001110010", 167 => "000000110010101110010111010", 
    168 => "111111110110011110111111000", 169 => "111110110011011010101110010", 
    170 => "111110101001110011011011101", 171 => "111111000010111111100101110", 
    172 => "111101010000001011010111111", 173 => "000000001011001010000110011", 
    174 => "111111011100100100101000001", 175 => "000000010101100111110100101", 
    176 => "111110011010110110001110010", 177 => "111110110111110010000100001", 
    178 => "110000001000011010011011110", 179 => "010001001100001100010011111", 
    180 => "001100111110000101000011011", 181 => "101111000001100000111110111", 
    182 => "001000010110001110001000110", 183 => "111011001010011110010011110", 
    184 => "001001101100100011111011111", 185 => "000010111110010110000101101", 
    186 => "111101111011100110011110001", 187 => "111111010110000001001101011", 
    188 => "000001110011010000011111100", 189 => "111111010110111100100001100", 
    190 => "110000110010011010100111110", 191 => "111101110001001011010110001", 
    192 => "111101010111000110011100001", 193 => "000010010110111100110000110", 
    194 => "111110101101110011111110000", 195 => "111111111011001101001100000", 
    196 => "000001000000010011101100011", 197 => "111110100001001110011111110", 
    198 => "111111100100100011011100010", 199 => "000010101010000111101001110", 
    200 => "111111100011110110100011100", 201 => "111110111001011101001001110", 
    202 => "000010000111101000000101001", 203 => "000001101010000000101011110", 
    204 => "111111110011100011000001010", 205 => "111111001100110010110101101", 
    206 => "000001110110110101010001001", 207 => "111110011100111011010010110", 
    208 => "111110000110110100000001010", 209 => "111101100111111011010011010", 
    210 => "111110010101010011001101000", 211 => "111111011101010011110001101", 
    212 => "000010000110111010100000100", 213 => "111111010010011100101000101", 
    214 => "111111000011100001111011111", 215 => "000001101001010010100101000", 
    216 => "111111000010100000011111110", 217 => "000010101101110011001010110", 
    218 => "000000100000100100000000101", 219 => "111111011001101001100101001", 
    220 => "000001011011001100100110011", 221 => "111111001011110101011010011", 
    222 => "000001001000001011110100110", 223 => "000010001101001101000100001", 
    224 => "000010101010100110001111011", 225 => "111101100001011110001110100", 
    226 => "000000101101000001110110011", 227 => "000010000011011111110111000", 
    228 => "000000111001110100010110000", 229 => "000001001101000111111110011", 
    230 => "111110110000000000010111001", 231 => "000001110110001111001111100", 
    232 => "000010011110101100110010010", 233 => "111110110110000110110000001", 
    234 => "111110001010011000101010001", 235 => "000001101011011100010000110", 
    236 => "000001110101101001110010111", 237 => "000000000111111000100110000", 
    238 => "000010010011011101111110101", 239 => "000001111100000011011110111", 
    240 => "000001000010100001110001101", 241 => "000000110001100000101000100", 
    242 => "111110110010011101101001100", 243 => "111110101110111010001110111", 
    244 => "000001011111111110010100110", 245 => "000000000110011011100101011", 
    246 => "000000101100000000011110010", 247 => "111111011001110100001110001", 
    248 => "111111000011000111000101010", 249 => "111110000000100111100000011", 
    250 => "111111110000011100000010100", 251 => "000000011001011010001010010", 
    252 => "111110010110100001000000111", 253 => "111101110001101000000100110", 
    254 => "000010010010010111111010110", 255 => "111101100001011011111001011", 
    256 => "000001101110001100111011011", 257 => "111101101110000011110001110", 
    258 => "111111010000110000010110011", 259 => "111111100101110101110010111", 
    260 => "000000101010111001100011000", 261 => "111101100100010111011000010", 
    262 => "111110000111011001001100010", 263 => "000000100100101110111001111", 
    264 => "000000010000010010111101000", 265 => "000001111111000100111011110", 
    266 => "111111111101110011011010101", 267 => "111110001011100111111111101", 
    268 => "111101101110101011110101100", 269 => "000001010111011010011111011", 
    270 => "000010101110000111010010000", 271 => "111111001010111001110111110", 
    272 => "111110110100011111010010111", 273 => "111110010100011100110000011", 
    274 => "111111100010110000011100111", 275 => "000001011001110111000110001", 
    276 => "111101110010001101100000111", 277 => "111111100110011010011010001", 
    278 => "000010000101110100010000110", 279 => "111101101001111111000111110", 
    280 => "000000010010100111110110011", 281 => "000000011010100000000011110", 
    282 => "000001000010000111010101110", 283 => "000010110100010100100100101", 
    284 => "111110011001001100010100100", 285 => "000001011001000111101101001", 
    286 => "000001100010110101101011000", 287 => "000001011100001101100000001", 
    288 => "111111001001100000001001010", 289 => "111110111110011111001011011", 
    290 => "111101110011111101111101110", 291 => "111110110101000001110111010", 
    292 => "000000010110000000000100111", 293 => "000010000100000110111000101", 
    294 => "111101111111111111111011101", 295 => "000000001010011101100111000", 
    296 => "111110110111101101111000000", 297 => "111110101100110100100100100", 
    298 => "000010011000101111010001010", 299 => "000001011011001111100010110", 
    300 => "000000011001000000100010000", 301 => "000000101001011101100110101", 
    302 => "111101010001011100110101110", 303 => "111110101000000011010100111", 
    304 => "000000000001100101000010101", 305 => "000001110110111010101011101", 
    306 => "000010101001110101101010110", 307 => "000010100111010101101110011", 
    308 => "111101110011001100111011111", 309 => "111101100101110010111001111", 
    310 => "111101110110110011000100111", 311 => "111111000111000111000110010", 
    312 => "000001011100001110011100000", 313 => "000001111101110111011000011", 
    314 => "000010010010011001110110100", 315 => "111111110010001010100011111", 
    316 => "111111110110011000010110011", 317 => "000000001111100010000110011", 
    318 => "111110111110011001011010001", 319 => "111110111000000111000100011", 
    320 => "000000100110111111010001111", 321 => "111110101101001011001010010", 
    322 => "000000011111010010000110111", 323 => "111110110110010100001000100", 
    324 => "111111011001001001001011000", 325 => "000010110011100100101000101", 
    326 => "000000100100001010000100110", 327 => "000010100101101101011011101", 
    328 => "000010000010001000011001010", 329 => "000001110100101111010000010", 
    330 => "111111101111110011111111101", 331 => "111101011110111110001001100", 
    332 => "000000100100010101001110101", 333 => "000001111100100001000101010", 
    334 => "000001000100001011111010111", 335 => "111101011001001111010110110", 
    336 => "111111011001111111010110010", 337 => "111101001101110111101011001", 
    338 => "111111100010011011011111000", 339 => "111101010100010101010110010", 
    340 => "111101111111011010100000011", 341 => "000010001111100011100011110", 
    342 => "111101101100010111100001001", 343 => "111101011100011101010111001", 
    344 => "000000100000110100011000001", 345 => "111111000101010010101101110", 
    346 => "000001010001001110001010000", 347 => "000010001001111011110101010", 
    348 => "111111001101001001001000110", 349 => "000000001101011101011000110", 
    350 => "111110100100010001011001001", 351 => "111110100001101011011110010", 
    352 => "111101100000110100100001000", 353 => "111111100001011111100101100", 
    354 => "000010010001110101001110010", 355 => "000010110001011110001101001", 
    356 => "000001110100001010101111010", 357 => "000011000000110111001010010", 
    358 => "000000100101001010100100101", 359 => "000011010000110010111001011", 
    360 => "111111001010010000111010000", 361 => "000000011010100100101010110", 
    362 => "111110101101000100101010110", 363 => "111110110001000100101010011", 
    364 => "111101001111010110110010100", 365 => "111110010010001001011001011", 
    366 => "000001000000000110010001111", 367 => "111110011001000000100010001", 
    368 => "000010000100110001010100111", 369 => "111101100110011000100111011", 
    370 => "000010000010000101010010111", 371 => "111101001110000100001110111", 
    372 => "111111101100100111100100100", 373 => "000000011101011100000011101", 
    374 => "000010100110110110100011000", 375 => "000010011111000110110100110", 
    376 => "000000101110010010101101000", 377 => "111110010001000010000010000", 
    378 => "000010000000010110101011100", 379 => "111101101000011100000011010", 
    380 => "000001110101111111010001000", 381 => "111101011101100001000110011", 
    382 => "111101100000010101010000110", 383 => "111111001011110001001111010", 
    384 => "000010100001011011100001000", 385 => "000010100100110001001110001", 
    386 => "111111101101111110010110001", 387 => "111110111101001100110110011", 
    388 => "000001011010101010011011100", 389 => "000010001111101000100000100", 
    390 => "000010011100100100110110001", 391 => "000001001110011110100100101", 
    392 => "000010100101111010011110110", 393 => "000000101000111100111000100", 
    394 => "000000011000011000001010110", 395 => "111101111000010011111011100", 
    396 => "000000011100001101000000100", 397 => "000010010111110101111011000", 
    398 => "111101011011001101010000110", 399 => "000001111011100111111001011", 
    400 => "000000101111000100111010111", 401 => "000000001111111100101000000", 
    402 => "000000001111011000000110010", 403 => "111111010011100001111011111", 
    404 => "111100101101110000000001101", 405 => "111001001101010111001011010", 
    406 => "000101010100100111110101011", 407 => "111001111110000010101101001", 
    408 => "000011110100111011100010100", 409 => "111101000001001001001100101", 
    410 => "000000100101100011110010010", 411 => "000000101101100000000110111", 
    412 => "000000011011110001001101001", 413 => "111110000110010011011100001", 
    414 => "111111010010010100011110101", 415 => "111101100111010100101100010", 
    416 => "000010101001111001010010100", 417 => "111101101001100001001101000", 
    418 => "111111111000111101011000111", 419 => "111110001010001110110000011", 
    420 => "000001001110000110101001010", 421 => "000010000010011100001010100", 
    422 => "111101010101011010011111110", 423 => "000010010000111010001011001", 
    424 => "000010101101111110010101101", 425 => "111111111100111010000011101", 
    426 => "000010101100000110010001100", 427 => "000010000100111100010011010", 
    428 => "000010100010000100011101000", 429 => "111110110001011001100100000", 
    430 => "111111010001111110111011110", 431 => "000000101001001000011111110", 
    432 => "000000001110000110100000001", 433 => "111111111011111000101010101", 
    434 => "000010001000110001101100000", 435 => "111101011110110010010010011", 
    436 => "000000100111001011000111111", 437 => "111110100001000000110110101", 
    438 => "000001001010001011001111010", 439 => "000010101011001001111000110", 
    440 => "000001011111111000000111101", 441 => "111110010011101100000001001", 
    442 => "000001101100101010101001101", 443 => "111101100100011001100001011", 
    444 => "000010001111101000011001001", 445 => "000001010001110110011100000", 
    446 => "111110100101111101101111010", 447 => "000000101011100101010100010", 
    448 => "111110100101010100000110000", 449 => "111101111011001111011000111", 
    450 => "000011101001011010100111110", 451 => "111010001111101100110101100", 
    452 => "111010010101110011011000010", 453 => "000010011000010001011110001", 
    454 => "000001110100101010010010001", 455 => "111101111011101100001111001", 
    456 => "000010101011011010100110010", 457 => "000001110011010110000100011", 
    458 => "111101111010111001110101100", 459 => "000000100100011011110101001", 
    460 => "111111000110110010010111000", 461 => "000001110010001010111001001", 
    462 => "000001010011100011000010001", 463 => "000000101111010110100001110", 
    464 => "111110010110001101001100000", 465 => "000001001011010011101110011", 
    466 => "111111011111111110110001000", 467 => "001001111101100100000011101", 
    468 => "111100101110011010101100010", 469 => "110111110001011100101001011", 
    470 => "000001101001011110010011100", 471 => "000000011000100001001000001", 
    472 => "000110011101110001100010110", 473 => "110101110000011110001000100", 
    474 => "000010001101110100100110111", 475 => "000001100111011011101001000", 
    476 => "111110100101100011100011100", 477 => "000010010010011011011000101", 
    478 => "110110100011111001100111010", 479 => "000000010111000001011000111", 
    480 => "111111001111001011111000001", 481 => "000001001011001101001111001", 
    482 => "111110111010100010001011100", 483 => "111110011110100010011001100", 
    484 => "111101101111111010100011000", 485 => "111101011100000001111111100", 
    486 => "111110111101011110000111000", 487 => "000010100000011001111110100", 
    488 => "000000001101011101000011010", 489 => "000010110001010100100011100", 
    490 => "111110111111111001111110001", 491 => "000000010010001011000011100", 
    492 => "000001101011010100010011111", 493 => "111110100110111000100101001", 
    494 => "000001101011111000010010010", 495 => "111111111010101001110101010", 
    496 => "000000010100110111111011000", 497 => "111111011000110011100101000", 
    498 => "111110011101111100100000100", 499 => "000010010000111110001110110", 
    500 => "000000011101110101101000011", 501 => "111101100101110101110100101", 
    502 => "000011000110101100111000001", 503 => "111111000101111010101010001", 
    504 => "000011110000101110111000010", 505 => "111111011110001101011101110", 
    506 => "000001000010010000101101110", 507 => "000000001011000010110001111", 
    508 => "111111010010011001100001100", 509 => "000010011101100010100000111", 
    510 => "000001000111000111100101111", 511 => "111110010101001101001011100" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem(CONV_INTEGER(addr1_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity nn_inference_weights_layer2_weights_V is
    generic (
        DataWidth : INTEGER := 27;
        AddressRange : INTEGER := 512;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of nn_inference_weights_layer2_weights_V is
    component nn_inference_weights_layer2_weights_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    nn_inference_weights_layer2_weights_V_rom_U :  component nn_inference_weights_layer2_weights_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1);

end architecture;


