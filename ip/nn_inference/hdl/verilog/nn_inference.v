// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nn_inference_nn_inference,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.284616,HLS_SYN_LAT=13542,HLS_SYN_TPT=none,HLS_SYN_MEM=40,HLS_SYN_DSP=0,HLS_SYN_FF=5577,HLS_SYN_LUT=55800,HLS_VERSION=2020_2}" *)

module nn_inference (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_img_address0,
        input_img_ce0,
        input_img_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_pp0_stage0 = 17'd2;
parameter    ap_ST_fsm_state6 = 17'd4;
parameter    ap_ST_fsm_state7 = 17'd8;
parameter    ap_ST_fsm_state8 = 17'd16;
parameter    ap_ST_fsm_state9 = 17'd32;
parameter    ap_ST_fsm_state10 = 17'd64;
parameter    ap_ST_fsm_state11 = 17'd128;
parameter    ap_ST_fsm_pp1_stage0 = 17'd256;
parameter    ap_ST_fsm_state15 = 17'd512;
parameter    ap_ST_fsm_pp2_stage0 = 17'd1024;
parameter    ap_ST_fsm_state19 = 17'd2048;
parameter    ap_ST_fsm_state20 = 17'd4096;
parameter    ap_ST_fsm_state21 = 17'd8192;
parameter    ap_ST_fsm_state22 = 17'd16384;
parameter    ap_ST_fsm_state23 = 17'd32768;
parameter    ap_ST_fsm_state24 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_img_address0;
output   input_img_ce0;
input  [31:0] input_img_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_img_ce0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] weights_layer2_weights_V_address0;
reg    weights_layer2_weights_V_ce0;
wire  signed [26:0] weights_layer2_weights_V_q0;
reg   [8:0] weights_layer2_weights_V_address1;
reg    weights_layer2_weights_V_ce1;
wire  signed [26:0] weights_layer2_weights_V_q1;
reg   [9:0] i_reg_316;
reg   [5:0] k_reg_339;
reg   [31:0] sum_V_4_reg_350;
reg   [5:0] k_1_reg_363;
reg   [31:0] sum_V_5_reg_374;
wire   [9:0] add_ln5_fu_413_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln5_fu_419_p2;
reg   [0:0] icmp_ln5_reg_1147;
reg   [0:0] icmp_ln5_reg_1147_pp0_iter1_reg;
reg   [0:0] icmp_ln5_reg_1147_pp0_iter2_reg;
wire   [63:0] i_cast_fu_425_p1;
reg   [63:0] i_cast_reg_1151;
reg   [63:0] i_cast_reg_1151_pp0_iter1_reg;
reg   [63:0] i_cast_reg_1151_pp0_iter2_reg;
reg   [31:0] input_img_load_reg_1161;
reg   [31:0] input_img_load_reg_1161_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_1171;
wire   [51:0] trunc_ln565_fu_465_p1;
reg   [51:0] trunc_ln565_reg_1176;
wire   [0:0] icmp_ln571_fu_469_p2;
reg   [0:0] icmp_ln571_reg_1181;
wire   [11:0] F2_fu_475_p2;
reg   [11:0] F2_reg_1189;
wire   [0:0] tmp_2_fu_701_p3;
wire    ap_CS_fsm_state11;
wire   [63:0] zext_ln42_fu_709_p1;
reg   [63:0] zext_ln42_reg_1201;
wire   [8:0] zext_ln42_1_fu_713_p1;
reg   [8:0] zext_ln42_1_reg_1206;
wire   [3:0] trunc_ln42_fu_717_p1;
reg   [3:0] trunc_ln42_reg_1211;
wire   [0:0] tmp_10_fu_721_p3;
reg   [0:0] tmp_10_reg_1216;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_state14_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] tmp_10_reg_1216_pp1_iter1_reg;
wire   [5:0] add_ln46_fu_729_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [4:0] empty_38_fu_763_p1;
reg   [4:0] empty_38_reg_1230;
wire   [55:0] r_V_1_fu_775_p2;
reg   [55:0] r_V_1_reg_1240;
reg    ap_enable_reg_pp1_iter2;
wire   [3:0] or_ln42_fu_870_p2;
reg   [3:0] or_ln42_reg_1260;
wire    ap_CS_fsm_state15;
wire   [63:0] zext_ln46_fu_875_p1;
reg   [63:0] zext_ln46_reg_1266;
wire   [0:0] tmp_11_fu_879_p3;
reg   [0:0] tmp_11_reg_1271;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state16_pp2_stage0_iter0;
wire    ap_block_state17_pp2_stage0_iter1;
wire    ap_block_state18_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] tmp_11_reg_1271_pp2_iter1_reg;
wire   [5:0] add_ln46_1_fu_887_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [4:0] or_ln46_1_fu_914_p2;
reg   [4:0] or_ln46_1_reg_1290;
wire   [55:0] r_V_5_fu_928_p2;
reg   [55:0] r_V_5_reg_1296;
reg    ap_enable_reg_pp2_iter2;
wire   [4:0] add_ln42_fu_1010_p2;
wire    ap_CS_fsm_state19;
wire   [31:0] grp_hwmm_layer3_fu_397_ap_return_0;
wire   [31:0] grp_hwmm_layer3_fu_397_ap_return_1;
wire   [31:0] grp_hwmm_layer3_fu_397_ap_return_2;
wire   [31:0] grp_hwmm_layer3_fu_397_ap_return_3;
wire   [31:0] grp_hwmm_layer3_fu_397_ap_return_4;
reg   [31:0] call_ret_reg_1321_4;
wire    ap_CS_fsm_state22;
reg   [31:0] temp_output3_0_0_V_reg_1326;
reg   [31:0] temp_output3_0_1_V_reg_1332;
reg   [31:0] temp_output3_0_2_V_reg_1338;
reg   [31:0] temp_output3_0_3_V_reg_1344;
wire   [0:0] icmp_ln1494_fu_1035_p2;
reg   [0:0] icmp_ln1494_reg_1350;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln1494_1_fu_1047_p2;
reg   [0:0] icmp_ln1494_1_reg_1355;
wire   [0:0] icmp_ln1494_2_fu_1059_p2;
reg   [0:0] icmp_ln1494_2_reg_1360;
wire   [0:0] icmp_ln1494_3_fu_1071_p2;
reg   [0:0] icmp_ln1494_3_reg_1366;
wire   [0:0] icmp_ln1494_4_fu_1083_p2;
reg   [0:0] icmp_ln1494_4_reg_1371;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_flush_enable;
reg    ap_enable_reg_pp2_iter1;
reg    ap_condition_pp2_exit_iter1_state17;
reg   [9:0] fp_input_img_V_address0;
reg    fp_input_img_V_ce0;
reg    fp_input_img_V_we0;
reg   [31:0] fp_input_img_V_d0;
wire   [31:0] fp_input_img_V_q0;
reg    fp_input_img_V_ce1;
wire   [31:0] fp_input_img_V_q1;
reg   [4:0] temp_output_0_V_address0;
reg    temp_output_0_V_ce0;
reg    temp_output_0_V_we0;
reg   [31:0] temp_output_0_V_d0;
wire   [31:0] temp_output_0_V_q0;
reg   [4:0] temp_output_0_V_address1;
reg    temp_output_0_V_ce1;
reg    temp_output_0_V_we1;
wire   [31:0] temp_output_0_V_q1;
reg   [3:0] temp_output2_0_V_address0;
reg    temp_output2_0_V_ce0;
reg    temp_output2_0_V_we0;
reg   [31:0] temp_output2_0_V_d0;
wire   [31:0] temp_output2_0_V_q0;
reg   [3:0] temp_output2_0_V_address1;
reg    temp_output2_0_V_ce1;
reg    temp_output2_0_V_we1;
wire   [31:0] temp_output2_0_V_q1;
wire    grp_hw_act_layer1_fu_387_ap_start;
wire    grp_hw_act_layer1_fu_387_ap_done;
wire    grp_hw_act_layer1_fu_387_ap_idle;
wire    grp_hw_act_layer1_fu_387_ap_ready;
wire   [4:0] grp_hw_act_layer1_fu_387_output_0_V_address0;
wire    grp_hw_act_layer1_fu_387_output_0_V_ce0;
wire    grp_hw_act_layer1_fu_387_output_0_V_we0;
wire   [31:0] grp_hw_act_layer1_fu_387_output_0_V_d0;
wire   [4:0] grp_hw_act_layer1_fu_387_output_0_V_address1;
wire    grp_hw_act_layer1_fu_387_output_0_V_ce1;
wire    grp_hw_act_layer1_fu_387_output_0_V_we1;
wire   [31:0] grp_hw_act_layer1_fu_387_output_0_V_d1;
wire   [63:0] grp_hw_act_layer1_fu_387_grp_fu_1377_p_din0;
wire   [63:0] grp_hw_act_layer1_fu_387_grp_fu_1377_p_din1;
wire   [4:0] grp_hw_act_layer1_fu_387_grp_fu_1377_p_opcode;
wire   [0:0] grp_hw_act_layer1_fu_387_grp_fu_1377_p_dout0;
wire    grp_hw_act_layer1_fu_387_grp_fu_1377_p_ce;
wire   [63:0] grp_hw_act_layer1_fu_387_grp_fu_1381_p_din0;
wire   [63:0] grp_hw_act_layer1_fu_387_grp_fu_1381_p_din1;
wire   [4:0] grp_hw_act_layer1_fu_387_grp_fu_1381_p_opcode;
wire   [0:0] grp_hw_act_layer1_fu_387_grp_fu_1381_p_dout0;
wire    grp_hw_act_layer1_fu_387_grp_fu_1381_p_ce;
wire    grp_hw_act_layer2_fu_392_ap_start;
wire    grp_hw_act_layer2_fu_392_ap_done;
wire    grp_hw_act_layer2_fu_392_ap_idle;
wire    grp_hw_act_layer2_fu_392_ap_ready;
wire   [3:0] grp_hw_act_layer2_fu_392_output_0_V_address0;
wire    grp_hw_act_layer2_fu_392_output_0_V_ce0;
wire    grp_hw_act_layer2_fu_392_output_0_V_we0;
wire   [31:0] grp_hw_act_layer2_fu_392_output_0_V_d0;
wire   [3:0] grp_hw_act_layer2_fu_392_output_0_V_address1;
wire    grp_hw_act_layer2_fu_392_output_0_V_ce1;
wire    grp_hw_act_layer2_fu_392_output_0_V_we1;
wire   [31:0] grp_hw_act_layer2_fu_392_output_0_V_d1;
wire   [63:0] grp_hw_act_layer2_fu_392_grp_fu_1377_p_din0;
wire   [63:0] grp_hw_act_layer2_fu_392_grp_fu_1377_p_din1;
wire   [4:0] grp_hw_act_layer2_fu_392_grp_fu_1377_p_opcode;
wire   [0:0] grp_hw_act_layer2_fu_392_grp_fu_1377_p_dout0;
wire    grp_hw_act_layer2_fu_392_grp_fu_1377_p_ce;
wire   [63:0] grp_hw_act_layer2_fu_392_grp_fu_1381_p_din0;
wire   [63:0] grp_hw_act_layer2_fu_392_grp_fu_1381_p_din1;
wire   [4:0] grp_hw_act_layer2_fu_392_grp_fu_1381_p_opcode;
wire   [0:0] grp_hw_act_layer2_fu_392_grp_fu_1381_p_dout0;
wire    grp_hw_act_layer2_fu_392_grp_fu_1381_p_ce;
wire    grp_hwmm_layer3_fu_397_ap_start;
wire    grp_hwmm_layer3_fu_397_ap_done;
wire    grp_hwmm_layer3_fu_397_ap_idle;
wire    grp_hwmm_layer3_fu_397_ap_ready;
wire   [3:0] grp_hwmm_layer3_fu_397_input_0_address0;
wire    grp_hwmm_layer3_fu_397_input_0_ce0;
wire   [3:0] grp_hwmm_layer3_fu_397_input_0_address1;
wire    grp_hwmm_layer3_fu_397_input_0_ce1;
wire    grp_hwmm_layer1_fu_402_ap_start;
wire    grp_hwmm_layer1_fu_402_ap_done;
wire    grp_hwmm_layer1_fu_402_ap_idle;
wire    grp_hwmm_layer1_fu_402_ap_ready;
wire   [9:0] grp_hwmm_layer1_fu_402_input_r_address0;
wire    grp_hwmm_layer1_fu_402_input_r_ce0;
wire   [9:0] grp_hwmm_layer1_fu_402_input_r_address1;
wire    grp_hwmm_layer1_fu_402_input_r_ce1;
wire   [4:0] grp_hwmm_layer1_fu_402_output_0_address0;
wire    grp_hwmm_layer1_fu_402_output_0_ce0;
wire    grp_hwmm_layer1_fu_402_output_0_we0;
wire   [31:0] grp_hwmm_layer1_fu_402_output_0_d0;
reg   [4:0] j_reg_327;
wire    ap_CS_fsm_state10;
wire    ap_block_pp2_stage0;
reg    grp_hw_act_layer1_fu_387_ap_start_reg;
wire    ap_CS_fsm_state9;
reg    grp_hw_act_layer2_fu_392_ap_start_reg;
wire    ap_CS_fsm_state20;
reg    grp_hwmm_layer3_fu_397_ap_start_reg;
wire    ap_CS_fsm_state21;
reg    grp_hwmm_layer1_fu_402_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln1118_fu_758_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] k_cast37_fu_735_p1;
wire   [63:0] zext_ln1118_1_fu_804_p1;
wire   [63:0] zext_ln44_fu_786_p1;
wire   [63:0] zext_ln1118_2_fu_905_p1;
wire   [63:0] k_1_cast38_fu_893_p1;
wire   [63:0] zext_ln1118_3_fu_944_p1;
wire   [63:0] zext_ln44_1_fu_934_p1;
wire   [31:0] select_ln571_4_fu_692_p3;
wire   [31:0] grp_fu_410_p0;
wire   [63:0] grp_fu_410_p1;
wire   [63:0] ireg_fu_435_p1;
wire   [10:0] exp_tmp_fu_451_p4;
wire   [62:0] trunc_ln555_fu_439_p1;
wire   [11:0] zext_ln455_fu_461_p1;
wire   [52:0] p_Result_1_fu_481_p3;
wire   [53:0] zext_ln569_fu_488_p1;
wire   [53:0] man_V_1_fu_492_p2;
wire   [0:0] icmp_ln581_fu_505_p2;
wire   [11:0] add_ln581_fu_510_p2;
wire   [11:0] sub_ln581_fu_515_p2;
wire  signed [11:0] sh_amt_fu_520_p3;
wire   [53:0] man_V_2_fu_498_p3;
wire   [6:0] tmp_fu_541_p4;
wire  signed [31:0] sext_ln581_fu_528_p1;
wire   [53:0] zext_ln586_fu_557_p1;
wire   [53:0] ashr_ln586_fu_561_p2;
wire   [0:0] tmp_1_fu_571_p3;
wire   [31:0] trunc_ln583_fu_537_p1;
wire   [0:0] icmp_ln582_fu_532_p2;
wire   [0:0] xor_ln571_fu_592_p2;
wire   [0:0] or_ln582_fu_603_p2;
wire   [0:0] xor_ln582_fu_608_p2;
wire   [0:0] and_ln581_fu_614_p2;
wire   [0:0] icmp_ln585_fu_620_p2;
wire   [0:0] or_ln581_fu_632_p2;
wire   [0:0] icmp_ln603_fu_551_p2;
wire   [0:0] xor_ln581_fu_638_p2;
wire   [31:0] shl_ln604_fu_586_p2;
wire   [0:0] and_ln603_fu_644_p2;
wire   [0:0] and_ln585_fu_626_p2;
wire   [31:0] select_ln588_fu_578_p3;
wire   [31:0] trunc_ln586_fu_567_p1;
wire   [0:0] and_ln582_fu_597_p2;
wire   [0:0] or_ln571_fu_657_p2;
wire   [31:0] select_ln571_fu_650_p3;
wire   [31:0] select_ln571_1_fu_662_p3;
wire   [0:0] or_ln571_1_fu_686_p2;
wire   [31:0] select_ln571_3_fu_678_p3;
wire   [31:0] select_ln571_2_fu_670_p3;
wire   [4:0] tmp_3_fu_740_p4;
wire   [9:0] tmp_4_fu_750_p3;
wire   [4:0] or_ln46_fu_781_p2;
wire   [8:0] tmp_5_fu_791_p3;
wire   [8:0] add_ln1118_fu_799_p2;
wire   [55:0] lhs_1_fu_809_p3;
wire   [55:0] ret_V_1_fu_817_p2;
wire   [31:0] tmp_6_fu_836_p4;
wire   [55:0] lhs_2_fu_846_p3;
wire   [55:0] r_V_3_fu_830_p2;
wire   [55:0] ret_V_2_fu_854_p2;
wire   [9:0] tmp_7_fu_898_p3;
wire   [4:0] empty_40_fu_910_p1;
wire   [8:0] tmp_8_fu_938_p3;
wire   [55:0] lhs_4_fu_949_p3;
wire   [55:0] ret_V_3_fu_957_p2;
wire   [31:0] tmp_9_fu_976_p4;
wire   [55:0] lhs_5_fu_986_p3;
wire   [55:0] r_V_7_fu_970_p2;
wire   [55:0] ret_V_4_fu_994_p2;
wire   [31:0] max_val_V_fu_1040_p3;
wire   [31:0] max_val_V_2_fu_1052_p3;
wire   [31:0] max_val_V_3_fu_1064_p3;
wire   [31:0] max_val_V_5_fu_1076_p3;
wire    ap_CS_fsm_state24;
wire   [0:0] or_ln118_fu_1089_p2;
wire   [2:0] select_ln118_1_fu_1104_p3;
wire   [2:0] select_ln114_fu_1111_p3;
wire   [2:0] select_ln118_2_fu_1118_p3;
wire   [0:0] or_ln118_1_fu_1093_p2;
wire   [3:0] select_ln118_fu_1097_p3;
wire  signed [3:0] sext_ln835_fu_1126_p1;
wire   [3:0] ret_V_fu_1130_p3;
wire   [0:0] grp_fu_1377_p2;
reg   [63:0] grp_fu_1377_p0;
reg   [63:0] grp_fu_1377_p1;
reg    grp_fu_1377_ce;
reg   [4:0] grp_fu_1377_opcode;
wire   [0:0] grp_fu_1381_p2;
reg   [63:0] grp_fu_1381_p0;
reg   [63:0] grp_fu_1381_p1;
reg    grp_fu_1381_ce;
reg   [4:0] grp_fu_1381_opcode;
reg   [16:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 grp_hw_act_layer1_fu_387_ap_start_reg = 1'b0;
#0 grp_hw_act_layer2_fu_392_ap_start_reg = 1'b0;
#0 grp_hwmm_layer3_fu_397_ap_start_reg = 1'b0;
#0 grp_hwmm_layer1_fu_402_ap_start_reg = 1'b0;
end

nn_inference_weights_layer2_weights_V #(
    .DataWidth( 27 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weights_layer2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_layer2_weights_V_address0),
    .ce0(weights_layer2_weights_V_ce0),
    .q0(weights_layer2_weights_V_q0),
    .address1(weights_layer2_weights_V_address1),
    .ce1(weights_layer2_weights_V_ce1),
    .q1(weights_layer2_weights_V_q1)
);

nn_inference_fp_input_img_V #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
fp_input_img_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fp_input_img_V_address0),
    .ce0(fp_input_img_V_ce0),
    .we0(fp_input_img_V_we0),
    .d0(fp_input_img_V_d0),
    .q0(fp_input_img_V_q0),
    .address1(grp_hwmm_layer1_fu_402_input_r_address1),
    .ce1(fp_input_img_V_ce1),
    .q1(fp_input_img_V_q1)
);

nn_inference_temp_output_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
temp_output_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_output_0_V_address0),
    .ce0(temp_output_0_V_ce0),
    .we0(temp_output_0_V_we0),
    .d0(temp_output_0_V_d0),
    .q0(temp_output_0_V_q0),
    .address1(temp_output_0_V_address1),
    .ce1(temp_output_0_V_ce1),
    .we1(temp_output_0_V_we1),
    .d1(grp_hw_act_layer1_fu_387_output_0_V_d1),
    .q1(temp_output_0_V_q1)
);

nn_inference_temp_output2_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_output2_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_output2_0_V_address0),
    .ce0(temp_output2_0_V_ce0),
    .we0(temp_output2_0_V_we0),
    .d0(temp_output2_0_V_d0),
    .q0(temp_output2_0_V_q0),
    .address1(temp_output2_0_V_address1),
    .ce1(temp_output2_0_V_ce1),
    .we1(temp_output2_0_V_we1),
    .d1(grp_hw_act_layer2_fu_392_output_0_V_d1),
    .q1(temp_output2_0_V_q1)
);

nn_inference_hw_act_layer1 grp_hw_act_layer1_fu_387(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hw_act_layer1_fu_387_ap_start),
    .ap_done(grp_hw_act_layer1_fu_387_ap_done),
    .ap_idle(grp_hw_act_layer1_fu_387_ap_idle),
    .ap_ready(grp_hw_act_layer1_fu_387_ap_ready),
    .output_0_V_address0(grp_hw_act_layer1_fu_387_output_0_V_address0),
    .output_0_V_ce0(grp_hw_act_layer1_fu_387_output_0_V_ce0),
    .output_0_V_we0(grp_hw_act_layer1_fu_387_output_0_V_we0),
    .output_0_V_d0(grp_hw_act_layer1_fu_387_output_0_V_d0),
    .output_0_V_q0(temp_output_0_V_q0),
    .output_0_V_address1(grp_hw_act_layer1_fu_387_output_0_V_address1),
    .output_0_V_ce1(grp_hw_act_layer1_fu_387_output_0_V_ce1),
    .output_0_V_we1(grp_hw_act_layer1_fu_387_output_0_V_we1),
    .output_0_V_d1(grp_hw_act_layer1_fu_387_output_0_V_d1),
    .output_0_V_q1(temp_output_0_V_q1),
    .grp_fu_1377_p_din0(grp_hw_act_layer1_fu_387_grp_fu_1377_p_din0),
    .grp_fu_1377_p_din1(grp_hw_act_layer1_fu_387_grp_fu_1377_p_din1),
    .grp_fu_1377_p_opcode(grp_hw_act_layer1_fu_387_grp_fu_1377_p_opcode),
    .grp_fu_1377_p_dout0(grp_hw_act_layer1_fu_387_grp_fu_1377_p_dout0),
    .grp_fu_1377_p_ce(grp_hw_act_layer1_fu_387_grp_fu_1377_p_ce),
    .grp_fu_1381_p_din0(grp_hw_act_layer1_fu_387_grp_fu_1381_p_din0),
    .grp_fu_1381_p_din1(grp_hw_act_layer1_fu_387_grp_fu_1381_p_din1),
    .grp_fu_1381_p_opcode(grp_hw_act_layer1_fu_387_grp_fu_1381_p_opcode),
    .grp_fu_1381_p_dout0(grp_hw_act_layer1_fu_387_grp_fu_1381_p_dout0),
    .grp_fu_1381_p_ce(grp_hw_act_layer1_fu_387_grp_fu_1381_p_ce)
);

nn_inference_hw_act_layer2 grp_hw_act_layer2_fu_392(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hw_act_layer2_fu_392_ap_start),
    .ap_done(grp_hw_act_layer2_fu_392_ap_done),
    .ap_idle(grp_hw_act_layer2_fu_392_ap_idle),
    .ap_ready(grp_hw_act_layer2_fu_392_ap_ready),
    .output_0_V_address0(grp_hw_act_layer2_fu_392_output_0_V_address0),
    .output_0_V_ce0(grp_hw_act_layer2_fu_392_output_0_V_ce0),
    .output_0_V_we0(grp_hw_act_layer2_fu_392_output_0_V_we0),
    .output_0_V_d0(grp_hw_act_layer2_fu_392_output_0_V_d0),
    .output_0_V_q0(temp_output2_0_V_q0),
    .output_0_V_address1(grp_hw_act_layer2_fu_392_output_0_V_address1),
    .output_0_V_ce1(grp_hw_act_layer2_fu_392_output_0_V_ce1),
    .output_0_V_we1(grp_hw_act_layer2_fu_392_output_0_V_we1),
    .output_0_V_d1(grp_hw_act_layer2_fu_392_output_0_V_d1),
    .output_0_V_q1(temp_output2_0_V_q1),
    .grp_fu_1377_p_din0(grp_hw_act_layer2_fu_392_grp_fu_1377_p_din0),
    .grp_fu_1377_p_din1(grp_hw_act_layer2_fu_392_grp_fu_1377_p_din1),
    .grp_fu_1377_p_opcode(grp_hw_act_layer2_fu_392_grp_fu_1377_p_opcode),
    .grp_fu_1377_p_dout0(grp_hw_act_layer2_fu_392_grp_fu_1377_p_dout0),
    .grp_fu_1377_p_ce(grp_hw_act_layer2_fu_392_grp_fu_1377_p_ce),
    .grp_fu_1381_p_din0(grp_hw_act_layer2_fu_392_grp_fu_1381_p_din0),
    .grp_fu_1381_p_din1(grp_hw_act_layer2_fu_392_grp_fu_1381_p_din1),
    .grp_fu_1381_p_opcode(grp_hw_act_layer2_fu_392_grp_fu_1381_p_opcode),
    .grp_fu_1381_p_dout0(grp_hw_act_layer2_fu_392_grp_fu_1381_p_dout0),
    .grp_fu_1381_p_ce(grp_hw_act_layer2_fu_392_grp_fu_1381_p_ce)
);

nn_inference_hwmm_layer3 grp_hwmm_layer3_fu_397(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hwmm_layer3_fu_397_ap_start),
    .ap_done(grp_hwmm_layer3_fu_397_ap_done),
    .ap_idle(grp_hwmm_layer3_fu_397_ap_idle),
    .ap_ready(grp_hwmm_layer3_fu_397_ap_ready),
    .input_0_address0(grp_hwmm_layer3_fu_397_input_0_address0),
    .input_0_ce0(grp_hwmm_layer3_fu_397_input_0_ce0),
    .input_0_q0(temp_output2_0_V_q0),
    .input_0_address1(grp_hwmm_layer3_fu_397_input_0_address1),
    .input_0_ce1(grp_hwmm_layer3_fu_397_input_0_ce1),
    .input_0_q1(temp_output2_0_V_q1),
    .ap_return_0(grp_hwmm_layer3_fu_397_ap_return_0),
    .ap_return_1(grp_hwmm_layer3_fu_397_ap_return_1),
    .ap_return_2(grp_hwmm_layer3_fu_397_ap_return_2),
    .ap_return_3(grp_hwmm_layer3_fu_397_ap_return_3),
    .ap_return_4(grp_hwmm_layer3_fu_397_ap_return_4)
);

nn_inference_hwmm_layer1 grp_hwmm_layer1_fu_402(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hwmm_layer1_fu_402_ap_start),
    .ap_done(grp_hwmm_layer1_fu_402_ap_done),
    .ap_idle(grp_hwmm_layer1_fu_402_ap_idle),
    .ap_ready(grp_hwmm_layer1_fu_402_ap_ready),
    .input_r_address0(grp_hwmm_layer1_fu_402_input_r_address0),
    .input_r_ce0(grp_hwmm_layer1_fu_402_input_r_ce0),
    .input_r_q0(fp_input_img_V_q0),
    .input_r_address1(grp_hwmm_layer1_fu_402_input_r_address1),
    .input_r_ce1(grp_hwmm_layer1_fu_402_input_r_ce1),
    .input_r_q1(fp_input_img_V_q1),
    .output_0_address0(grp_hwmm_layer1_fu_402_output_0_address0),
    .output_0_ce0(grp_hwmm_layer1_fu_402_output_0_ce0),
    .output_0_we0(grp_hwmm_layer1_fu_402_output_0_we0),
    .output_0_d0(grp_hwmm_layer1_fu_402_output_0_d0)
);

nn_inference_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_410_p0),
    .ce(1'b1),
    .dout(grp_fu_410_p1)
);

nn_inference_mul_27s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_27s_32s_56_1_1_U117(
    .din0(weights_layer2_weights_V_q1),
    .din1(temp_output_0_V_q1),
    .dout(r_V_1_fu_775_p2)
);

nn_inference_mul_27s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_27s_32s_56_1_1_U118(
    .din0(weights_layer2_weights_V_q0),
    .din1(temp_output_0_V_q0),
    .dout(r_V_3_fu_830_p2)
);

nn_inference_mul_27s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_27s_32s_56_1_1_U119(
    .din0(weights_layer2_weights_V_q1),
    .din1(temp_output_0_V_q0),
    .dout(r_V_5_fu_928_p2)
);

nn_inference_mul_27s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_27s_32s_56_1_1_U120(
    .din0(weights_layer2_weights_V_q0),
    .din1(temp_output_0_V_q1),
    .dout(r_V_7_fu_970_p2)
);

nn_inference_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1377_p0),
    .din1(grp_fu_1377_p1),
    .ce(grp_fu_1377_ce),
    .opcode(grp_fu_1377_opcode),
    .dout(grp_fu_1377_p2)
);

nn_inference_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1381_p0),
    .din1(grp_fu_1381_p1),
    .ce(grp_fu_1381_ce),
    .opcode(grp_fu_1381_opcode),
    .dout(grp_fu_1381_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_2_fu_701_p3 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state12)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_2_fu_701_p3 == 1'd0))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter1_state17)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter1_state17))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hw_act_layer1_fu_387_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_hw_act_layer1_fu_387_ap_start_reg <= 1'b1;
        end else if ((grp_hw_act_layer1_fu_387_ap_ready == 1'b1)) begin
            grp_hw_act_layer1_fu_387_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hw_act_layer2_fu_392_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (tmp_2_fu_701_p3 == 1'd1))) begin
            grp_hw_act_layer2_fu_392_ap_start_reg <= 1'b1;
        end else if ((grp_hw_act_layer2_fu_392_ap_ready == 1'b1)) begin
            grp_hw_act_layer2_fu_392_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hwmm_layer1_fu_402_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_hwmm_layer1_fu_402_ap_start_reg <= 1'b1;
        end else if ((grp_hwmm_layer1_fu_402_ap_ready == 1'b1)) begin
            grp_hwmm_layer1_fu_402_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hwmm_layer3_fu_397_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            grp_hwmm_layer3_fu_397_ap_start_reg <= 1'b1;
        end else if ((grp_hwmm_layer3_fu_397_ap_ready == 1'b1)) begin
            grp_hwmm_layer3_fu_397_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_316 <= 10'd0;
    end else if (((icmp_ln5_fu_419_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_316 <= add_ln5_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_hw_act_layer1_fu_387_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        j_reg_327 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        j_reg_327 <= add_ln42_fu_1010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_1_reg_363 <= 6'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (tmp_11_fu_879_p3 == 1'd0))) begin
        k_1_reg_363 <= add_ln46_1_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_2_fu_701_p3 == 1'd0))) begin
        k_reg_339 <= 6'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_10_fu_721_p3 == 1'd0))) begin
        k_reg_339 <= add_ln46_fu_729_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_2_fu_701_p3 == 1'd0))) begin
        sum_V_4_reg_350 <= 32'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_10_reg_1216_pp1_iter1_reg == 1'd0))) begin
        sum_V_4_reg_350 <= {{ret_V_2_fu_854_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sum_V_5_reg_374 <= 32'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (tmp_11_reg_1271_pp2_iter1_reg == 1'd0))) begin
        sum_V_5_reg_374 <= {{ret_V_4_fu_994_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_reg_1147_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_reg_1189 <= F2_fu_475_p2;
        icmp_ln571_reg_1181 <= icmp_ln571_fu_469_p2;
        p_Result_s_reg_1171 <= ireg_fu_435_p1[32'd63];
        trunc_ln565_reg_1176 <= trunc_ln565_fu_465_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        call_ret_reg_1321_4 <= grp_hwmm_layer3_fu_397_ap_return_4;
        temp_output3_0_0_V_reg_1326 <= grp_hwmm_layer3_fu_397_ap_return_0;
        temp_output3_0_1_V_reg_1332 <= grp_hwmm_layer3_fu_397_ap_return_1;
        temp_output3_0_2_V_reg_1338 <= grp_hwmm_layer3_fu_397_ap_return_2;
        temp_output3_0_3_V_reg_1344 <= grp_hwmm_layer3_fu_397_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_10_fu_721_p3 == 1'd0))) begin
        empty_38_reg_1230 <= empty_38_fu_763_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_fu_419_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_cast_reg_1151[9 : 0] <= i_cast_fu_425_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_cast_reg_1151_pp0_iter1_reg[9 : 0] <= i_cast_reg_1151[9 : 0];
        icmp_ln5_reg_1147 <= icmp_ln5_fu_419_p2;
        icmp_ln5_reg_1147_pp0_iter1_reg <= icmp_ln5_reg_1147;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_cast_reg_1151_pp0_iter2_reg[9 : 0] <= i_cast_reg_1151_pp0_iter1_reg[9 : 0];
        icmp_ln5_reg_1147_pp0_iter2_reg <= icmp_ln5_reg_1147_pp0_iter1_reg;
        input_img_load_reg_1161_pp0_iter2_reg <= input_img_load_reg_1161;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        icmp_ln1494_1_reg_1355 <= icmp_ln1494_1_fu_1047_p2;
        icmp_ln1494_2_reg_1360 <= icmp_ln1494_2_fu_1059_p2;
        icmp_ln1494_3_reg_1366 <= icmp_ln1494_3_fu_1071_p2;
        icmp_ln1494_4_reg_1371 <= icmp_ln1494_4_fu_1083_p2;
        icmp_ln1494_reg_1350 <= icmp_ln1494_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_reg_1147 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_img_load_reg_1161 <= input_img_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        or_ln42_reg_1260[3 : 1] <= or_ln42_fu_870_p2[3 : 1];
        zext_ln46_reg_1266[3 : 1] <= zext_ln46_fu_875_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (tmp_11_fu_879_p3 == 1'd0))) begin
        or_ln46_1_reg_1290[4 : 1] <= or_ln46_1_fu_914_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_10_reg_1216 == 1'd0))) begin
        r_V_1_reg_1240 <= r_V_1_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (tmp_11_reg_1271 == 1'd0))) begin
        r_V_5_reg_1296 <= r_V_5_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_10_reg_1216 <= k_reg_339[32'd5];
        tmp_10_reg_1216_pp1_iter1_reg <= tmp_10_reg_1216;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_11_reg_1271 <= k_1_reg_363[32'd5];
        tmp_11_reg_1271_pp2_iter1_reg <= tmp_11_reg_1271;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_2_fu_701_p3 == 1'd0))) begin
        trunc_ln42_reg_1211 <= trunc_ln42_fu_717_p1;
        zext_ln42_1_reg_1206[4 : 0] <= zext_ln42_1_fu_713_p1[4 : 0];
        zext_ln42_reg_1201[4 : 0] <= zext_ln42_fu_709_p1[4 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln5_fu_419_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_10_fu_721_p3 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_condition_pp2_exit_iter1_state17 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter1_state17 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (tmp_11_fu_879_p3 == 1'd1))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fp_input_img_V_address0 = i_cast_reg_1151_pp0_iter2_reg;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fp_input_img_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fp_input_img_V_address0 = grp_hwmm_layer1_fu_402_input_r_address0;
    end else begin
        fp_input_img_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fp_input_img_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fp_input_img_V_ce0 = grp_hwmm_layer1_fu_402_input_r_ce0;
    end else begin
        fp_input_img_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fp_input_img_V_ce1 = grp_hwmm_layer1_fu_402_input_r_ce1;
    end else begin
        fp_input_img_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fp_input_img_V_d0 = select_ln571_4_fu_692_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fp_input_img_V_d0 = 32'd16777216;
    end else begin
        fp_input_img_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln5_reg_1147_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fp_input_img_V_we0 = 1'b1;
    end else begin
        fp_input_img_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1377_ce = grp_hw_act_layer2_fu_392_grp_fu_1377_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1377_ce = grp_hw_act_layer1_fu_387_grp_fu_1377_p_ce;
    end else begin
        grp_fu_1377_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1377_opcode = grp_hw_act_layer2_fu_392_grp_fu_1377_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1377_opcode = grp_hw_act_layer1_fu_387_grp_fu_1377_p_opcode;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1377_p0 = grp_hw_act_layer2_fu_392_grp_fu_1377_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1377_p0 = grp_hw_act_layer1_fu_387_grp_fu_1377_p_din0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1377_p1 = grp_hw_act_layer2_fu_392_grp_fu_1377_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1377_p1 = grp_hw_act_layer1_fu_387_grp_fu_1377_p_din1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1381_ce = grp_hw_act_layer2_fu_392_grp_fu_1381_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1381_ce = grp_hw_act_layer1_fu_387_grp_fu_1381_p_ce;
    end else begin
        grp_fu_1381_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1381_opcode = grp_hw_act_layer2_fu_392_grp_fu_1381_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1381_opcode = grp_hw_act_layer1_fu_387_grp_fu_1381_p_opcode;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1381_p0 = grp_hw_act_layer2_fu_392_grp_fu_1381_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1381_p0 = grp_hw_act_layer1_fu_387_grp_fu_1381_p_din0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1381_p1 = grp_hw_act_layer2_fu_392_grp_fu_1381_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1381_p1 = grp_hw_act_layer1_fu_387_grp_fu_1381_p_din1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_img_ce0 = 1'b1;
    end else begin
        input_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        temp_output2_0_V_address0 = zext_ln46_reg_1266;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_output2_0_V_address0 = zext_ln42_reg_1201;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output2_0_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        temp_output2_0_V_address0 = grp_hwmm_layer3_fu_397_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output2_0_V_address0 = grp_hw_act_layer2_fu_392_output_0_V_address0;
    end else begin
        temp_output2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        temp_output2_0_V_address1 = grp_hwmm_layer3_fu_397_input_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output2_0_V_address1 = grp_hw_act_layer2_fu_392_output_0_V_address1;
    end else begin
        temp_output2_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15))) begin
        temp_output2_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        temp_output2_0_V_ce0 = grp_hwmm_layer3_fu_397_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output2_0_V_ce0 = grp_hw_act_layer2_fu_392_output_0_V_ce0;
    end else begin
        temp_output2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        temp_output2_0_V_ce1 = grp_hwmm_layer3_fu_397_input_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output2_0_V_ce1 = grp_hw_act_layer2_fu_392_output_0_V_ce1;
    end else begin
        temp_output2_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        temp_output2_0_V_d0 = sum_V_5_reg_374;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_output2_0_V_d0 = sum_V_4_reg_350;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output2_0_V_d0 = 32'd16777216;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output2_0_V_d0 = grp_hw_act_layer2_fu_392_output_0_V_d0;
    end else begin
        temp_output2_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15))) begin
        temp_output2_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output2_0_V_we0 = grp_hw_act_layer2_fu_392_output_0_V_we0;
    end else begin
        temp_output2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output2_0_V_we1 = grp_hw_act_layer2_fu_392_output_0_V_we1;
    end else begin
        temp_output2_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        temp_output_0_V_address0 = k_1_cast38_fu_893_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        temp_output_0_V_address0 = zext_ln44_fu_786_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output_0_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_output_0_V_address0 = grp_hwmm_layer1_fu_402_output_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_address0 = grp_hw_act_layer1_fu_387_output_0_V_address0;
    end else begin
        temp_output_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        temp_output_0_V_address1 = zext_ln44_1_fu_934_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        temp_output_0_V_address1 = k_cast37_fu_735_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_address1 = grp_hw_act_layer1_fu_387_output_0_V_address1;
    end else begin
        temp_output_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        temp_output_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_output_0_V_ce0 = grp_hwmm_layer1_fu_402_output_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_ce0 = grp_hw_act_layer1_fu_387_output_0_V_ce0;
    end else begin
        temp_output_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        temp_output_0_V_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_ce1 = grp_hw_act_layer1_fu_387_output_0_V_ce1;
    end else begin
        temp_output_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output_0_V_d0 = 32'd16777216;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_output_0_V_d0 = grp_hwmm_layer1_fu_402_output_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_d0 = grp_hw_act_layer1_fu_387_output_0_V_d0;
    end else begin
        temp_output_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_output_0_V_we0 = grp_hwmm_layer1_fu_402_output_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_we0 = grp_hw_act_layer1_fu_387_output_0_V_we0;
    end else begin
        temp_output_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_we1 = grp_hw_act_layer1_fu_387_output_0_V_we1;
    end else begin
        temp_output_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        weights_layer2_weights_V_address0 = zext_ln1118_3_fu_944_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        weights_layer2_weights_V_address0 = zext_ln1118_1_fu_804_p1;
    end else begin
        weights_layer2_weights_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        weights_layer2_weights_V_address1 = zext_ln1118_2_fu_905_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        weights_layer2_weights_V_address1 = zext_ln1118_fu_758_p1;
    end else begin
        weights_layer2_weights_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        weights_layer2_weights_V_ce0 = 1'b1;
    end else begin
        weights_layer2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        weights_layer2_weights_V_ce1 = 1'b1;
    end else begin
        weights_layer2_weights_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln5_fu_419_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln5_fu_419_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_hwmm_layer1_fu_402_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_hw_act_layer1_fu_387_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_2_fu_701_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_10_fu_721_p3 == 1'd1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_10_fu_721_p3 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_hw_act_layer2_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_hwmm_layer3_fu_397_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_475_p2 = (12'd1075 - zext_ln455_fu_461_p1);

assign add_ln1118_fu_799_p2 = (tmp_5_fu_791_p3 + zext_ln42_1_reg_1206);

assign add_ln42_fu_1010_p2 = (j_reg_327 + 5'd2);

assign add_ln46_1_fu_887_p2 = (k_1_reg_363 + 6'd2);

assign add_ln46_fu_729_p2 = (k_reg_339 + 6'd2);

assign add_ln581_fu_510_p2 = ($signed(F2_reg_1189) + $signed(12'd4072));

assign add_ln5_fu_413_p2 = (i_reg_316 + 10'd1);

assign and_ln581_fu_614_p2 = (xor_ln582_fu_608_p2 & icmp_ln581_fu_505_p2);

assign and_ln582_fu_597_p2 = (xor_ln571_fu_592_p2 & icmp_ln582_fu_532_p2);

assign and_ln585_fu_626_p2 = (icmp_ln585_fu_620_p2 & and_ln581_fu_614_p2);

assign and_ln603_fu_644_p2 = (xor_ln581_fu_638_p2 & icmp_ln603_fu_551_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_return = $signed(ret_V_fu_1130_p3);

assign ashr_ln586_fu_561_p2 = $signed(man_V_2_fu_498_p3) >>> zext_ln586_fu_557_p1;

assign empty_38_fu_763_p1 = k_reg_339[4:0];

assign empty_40_fu_910_p1 = k_1_reg_363[4:0];

assign exp_tmp_fu_451_p4 = {{ireg_fu_435_p1[62:52]}};

assign grp_fu_410_p0 = input_img_q0;

assign grp_hw_act_layer1_fu_387_ap_start = grp_hw_act_layer1_fu_387_ap_start_reg;

assign grp_hw_act_layer1_fu_387_grp_fu_1377_p_dout0 = grp_fu_1377_p2;

assign grp_hw_act_layer1_fu_387_grp_fu_1381_p_dout0 = grp_fu_1381_p2;

assign grp_hw_act_layer2_fu_392_ap_start = grp_hw_act_layer2_fu_392_ap_start_reg;

assign grp_hw_act_layer2_fu_392_grp_fu_1377_p_dout0 = grp_fu_1377_p2;

assign grp_hw_act_layer2_fu_392_grp_fu_1381_p_dout0 = grp_fu_1381_p2;

assign grp_hwmm_layer1_fu_402_ap_start = grp_hwmm_layer1_fu_402_ap_start_reg;

assign grp_hwmm_layer3_fu_397_ap_start = grp_hwmm_layer3_fu_397_ap_start_reg;

assign i_cast_fu_425_p1 = i_reg_316;

assign icmp_ln1494_1_fu_1047_p2 = (($signed(temp_output3_0_1_V_reg_1332) > $signed(max_val_V_fu_1040_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_1059_p2 = (($signed(temp_output3_0_2_V_reg_1338) > $signed(max_val_V_2_fu_1052_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_1071_p2 = (($signed(temp_output3_0_3_V_reg_1344) > $signed(max_val_V_3_fu_1064_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_1083_p2 = (($signed(call_ret_reg_1321_4) > $signed(max_val_V_5_fu_1076_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_1035_p2 = (($signed(temp_output3_0_0_V_reg_1326) > $signed(32'd2181038080)) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_469_p2 = ((trunc_ln555_fu_439_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_505_p2 = (($signed(F2_reg_1189) > $signed(12'd24)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_532_p2 = ((F2_reg_1189 == 12'd24) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_620_p2 = ((sh_amt_fu_520_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln5_fu_419_p2 = ((i_reg_316 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_551_p2 = ((tmp_fu_541_p4 == 7'd0) ? 1'b1 : 1'b0);

assign input_img_address0 = i_cast_fu_425_p1;

assign ireg_fu_435_p1 = grp_fu_410_p1;

assign k_1_cast38_fu_893_p1 = k_1_reg_363;

assign k_cast37_fu_735_p1 = k_reg_339;

assign lhs_1_fu_809_p3 = {{sum_V_4_reg_350}, {24'd0}};

assign lhs_2_fu_846_p3 = {{tmp_6_fu_836_p4}, {24'd0}};

assign lhs_4_fu_949_p3 = {{sum_V_5_reg_374}, {24'd0}};

assign lhs_5_fu_986_p3 = {{tmp_9_fu_976_p4}, {24'd0}};

assign man_V_1_fu_492_p2 = (54'd0 - zext_ln569_fu_488_p1);

assign man_V_2_fu_498_p3 = ((p_Result_s_reg_1171[0:0] == 1'b1) ? man_V_1_fu_492_p2 : zext_ln569_fu_488_p1);

assign max_val_V_2_fu_1052_p3 = ((icmp_ln1494_1_fu_1047_p2[0:0] == 1'b1) ? temp_output3_0_1_V_reg_1332 : max_val_V_fu_1040_p3);

assign max_val_V_3_fu_1064_p3 = ((icmp_ln1494_2_fu_1059_p2[0:0] == 1'b1) ? temp_output3_0_2_V_reg_1338 : max_val_V_2_fu_1052_p3);

assign max_val_V_5_fu_1076_p3 = ((icmp_ln1494_3_fu_1071_p2[0:0] == 1'b1) ? temp_output3_0_3_V_reg_1344 : max_val_V_3_fu_1064_p3);

assign max_val_V_fu_1040_p3 = ((icmp_ln1494_fu_1035_p2[0:0] == 1'b1) ? temp_output3_0_0_V_reg_1326 : 32'd2181038080);

assign or_ln118_1_fu_1093_p2 = (icmp_ln1494_4_reg_1371 | icmp_ln1494_3_reg_1366);

assign or_ln118_fu_1089_p2 = (icmp_ln1494_2_reg_1360 | icmp_ln1494_1_reg_1355);

assign or_ln42_fu_870_p2 = (trunc_ln42_reg_1211 | 4'd1);

assign or_ln46_1_fu_914_p2 = (empty_40_fu_910_p1 | 5'd1);

assign or_ln46_fu_781_p2 = (empty_38_reg_1230 | 5'd1);

assign or_ln571_1_fu_686_p2 = (or_ln571_fu_657_p2 | and_ln581_fu_614_p2);

assign or_ln571_fu_657_p2 = (icmp_ln571_reg_1181 | and_ln603_fu_644_p2);

assign or_ln581_fu_632_p2 = (or_ln582_fu_603_p2 | icmp_ln581_fu_505_p2);

assign or_ln582_fu_603_p2 = (icmp_ln582_fu_532_p2 | icmp_ln571_reg_1181);

assign p_Result_1_fu_481_p3 = {{1'd1}, {trunc_ln565_reg_1176}};

assign ret_V_1_fu_817_p2 = (lhs_1_fu_809_p3 + r_V_1_reg_1240);

assign ret_V_2_fu_854_p2 = (lhs_2_fu_846_p3 + r_V_3_fu_830_p2);

assign ret_V_3_fu_957_p2 = (lhs_4_fu_949_p3 + r_V_5_reg_1296);

assign ret_V_4_fu_994_p2 = (lhs_5_fu_986_p3 + r_V_7_fu_970_p2);

assign ret_V_fu_1130_p3 = ((or_ln118_1_fu_1093_p2[0:0] == 1'b1) ? select_ln118_fu_1097_p3 : sext_ln835_fu_1126_p1);

assign select_ln114_fu_1111_p3 = ((icmp_ln1494_reg_1350[0:0] == 1'b1) ? 3'd0 : 3'd7);

assign select_ln118_1_fu_1104_p3 = ((icmp_ln1494_2_reg_1360[0:0] == 1'b1) ? 3'd2 : 3'd1);

assign select_ln118_2_fu_1118_p3 = ((or_ln118_fu_1089_p2[0:0] == 1'b1) ? select_ln118_1_fu_1104_p3 : select_ln114_fu_1111_p3);

assign select_ln118_fu_1097_p3 = ((icmp_ln1494_4_reg_1371[0:0] == 1'b1) ? 4'd4 : 4'd3);

assign select_ln571_1_fu_662_p3 = ((and_ln585_fu_626_p2[0:0] == 1'b1) ? select_ln588_fu_578_p3 : trunc_ln586_fu_567_p1);

assign select_ln571_2_fu_670_p3 = ((and_ln582_fu_597_p2[0:0] == 1'b1) ? trunc_ln583_fu_537_p1 : 32'd0);

assign select_ln571_3_fu_678_p3 = ((or_ln571_fu_657_p2[0:0] == 1'b1) ? select_ln571_fu_650_p3 : select_ln571_1_fu_662_p3);

assign select_ln571_4_fu_692_p3 = ((or_ln571_1_fu_686_p2[0:0] == 1'b1) ? select_ln571_3_fu_678_p3 : select_ln571_2_fu_670_p3);

assign select_ln571_fu_650_p3 = ((icmp_ln571_reg_1181[0:0] == 1'b1) ? 32'd0 : shl_ln604_fu_586_p2);

assign select_ln588_fu_578_p3 = ((tmp_1_fu_571_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign sext_ln581_fu_528_p1 = sh_amt_fu_520_p3;

assign sext_ln835_fu_1126_p1 = $signed(select_ln118_2_fu_1118_p3);

assign sh_amt_fu_520_p3 = ((icmp_ln581_fu_505_p2[0:0] == 1'b1) ? add_ln581_fu_510_p2 : sub_ln581_fu_515_p2);

assign shl_ln604_fu_586_p2 = trunc_ln583_fu_537_p1 << sext_ln581_fu_528_p1;

assign sub_ln581_fu_515_p2 = (12'd24 - F2_reg_1189);

assign tmp_10_fu_721_p3 = k_reg_339[32'd5];

assign tmp_11_fu_879_p3 = k_1_reg_363[32'd5];

assign tmp_1_fu_571_p3 = input_img_load_reg_1161_pp0_iter2_reg[32'd31];

assign tmp_2_fu_701_p3 = j_reg_327[32'd4];

assign tmp_3_fu_740_p4 = {{k_reg_339[5:1]}};

assign tmp_4_fu_750_p3 = {{tmp_3_fu_740_p4}, {j_reg_327}};

assign tmp_5_fu_791_p3 = {{or_ln46_fu_781_p2}, {4'd0}};

assign tmp_6_fu_836_p4 = {{ret_V_1_fu_817_p2[55:24]}};

assign tmp_7_fu_898_p3 = {{k_1_reg_363}, {or_ln42_reg_1260}};

assign tmp_8_fu_938_p3 = {{or_ln46_1_reg_1290}, {or_ln42_reg_1260}};

assign tmp_9_fu_976_p4 = {{ret_V_3_fu_957_p2[55:24]}};

assign tmp_fu_541_p4 = {{sh_amt_fu_520_p3[11:5]}};

assign trunc_ln42_fu_717_p1 = j_reg_327[3:0];

assign trunc_ln555_fu_439_p1 = ireg_fu_435_p1[62:0];

assign trunc_ln565_fu_465_p1 = ireg_fu_435_p1[51:0];

assign trunc_ln583_fu_537_p1 = man_V_2_fu_498_p3[31:0];

assign trunc_ln586_fu_567_p1 = ashr_ln586_fu_561_p2[31:0];

assign xor_ln571_fu_592_p2 = (icmp_ln571_reg_1181 ^ 1'd1);

assign xor_ln581_fu_638_p2 = (or_ln581_fu_632_p2 ^ 1'd1);

assign xor_ln582_fu_608_p2 = (or_ln582_fu_603_p2 ^ 1'd1);

assign zext_ln1118_1_fu_804_p1 = add_ln1118_fu_799_p2;

assign zext_ln1118_2_fu_905_p1 = tmp_7_fu_898_p3;

assign zext_ln1118_3_fu_944_p1 = tmp_8_fu_938_p3;

assign zext_ln1118_fu_758_p1 = tmp_4_fu_750_p3;

assign zext_ln42_1_fu_713_p1 = j_reg_327;

assign zext_ln42_fu_709_p1 = j_reg_327;

assign zext_ln44_1_fu_934_p1 = or_ln46_1_reg_1290;

assign zext_ln44_fu_786_p1 = or_ln46_fu_781_p2;

assign zext_ln455_fu_461_p1 = exp_tmp_fu_451_p4;

assign zext_ln46_fu_875_p1 = or_ln42_fu_870_p2;

assign zext_ln569_fu_488_p1 = p_Result_1_fu_481_p3;

assign zext_ln586_fu_557_p1 = $unsigned(sext_ln581_fu_528_p1);

always @ (posedge ap_clk) begin
    i_cast_reg_1151[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    i_cast_reg_1151_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    i_cast_reg_1151_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln42_reg_1201[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln42_1_reg_1206[8:5] <= 4'b0000;
    or_ln42_reg_1260[0] <= 1'b1;
    zext_ln46_reg_1266[0] <= 1'b1;
    zext_ln46_reg_1266[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    or_ln46_1_reg_1290[0] <= 1'b1;
end

endmodule //nn_inference
